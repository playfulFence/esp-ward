[package]
name = "esp-ward"
version = "0.1.0"
authors = ["Kirill Mikhailov <playfulfence@gmail.com>"]
edition = "2021"
build = "build.rs"

[package.metadata.docs.rs]
default-target = "riscv32imac-unknown-none-elf"
features = ["esp32c6-mqtt"]

[profile.dev.package.esp-wifi]
opt-level = 3

[dependencies]
# Espressif chip crates
esp-hal = { version = "0.16.1", features = ["eh1"], optional = true }
esp-println = { version = "0.9.1", optional = true }
esp-backtrace = { version = "0.11.1", features = [
    "panic-handler",
    "exception-handler",
    "println",
], optional = true }
esp-wifi = { version = "0.4.0", features = ["wifi-default"], optional = true }
esp-alloc = { version = "0.3.0", optional = true }


# Utility crates
embedded-hal = { version = "0.2.7", features = ["unproven"] }
embedded-hal-bus = "0.1.0"
embedded-svc = { version = "0.27.0", default-features = false }
embassy-time = { version = "0.3.0" }
embassy-net-driver = { version = "0.2.0", optional = true }
embassy-executor = { version = "0.5.0", features = [
    "nightly",
    "integrated-timers",
], optional = true }
fugit = "0.3.7"
heapless = { version = "0.8", default-features = false, features = [
    "portable-atomic",
], optional = true }
smoltcp = { version = "0.11.0", default-features = false, features = [
    "medium-ethernet",
    "socket-raw",
], optional = true }
rust-mqtt = { version = "0.3.0", default-features = false, optional = true }
embassy-net = { version = "0.4.0", features = [
    "tcp",
    "udp",
    "dhcpv4",
    "medium-ethernet",
    "proto-ipv6",
    "log",
    "dns",
], optional = true }
static_cell = { version = "2.0", features = ["nightly"], optional = true }

# Peripherals(sensors/displays) crates
bme280 = { version = "0.5.0" }
embedded-aht20 = "0.1.1"
embedded-sgp30 = "0.1.0"
tsl2591-eh-driver = "0.5.0"
cfg-if = "1.0.0"


# Display crates
pcd8544 = { git = "https://github.com/playfulFence/pcd8544.git" }
max7219 = "0.4.2"
esp-max7219-nostd = { git = "https://github.com/playfulFence/esp-max7219-nostd", branch = "alpha/0.2.0", optional = true }
mipidsi = "0.7.1"
# font with extended signs and options of sizing (unlike fonts in embedded-graphics)
profont = { version = "0.6.1", git = "https://github.com/sambenko/profont.git", branch = "embedded-graphics-0.8.0-fixes" }
display-interface-spi = "0.4.1"
embedded-graphics = "0.8.0"


[features]
# If you're using any MQTT-related features, provide these features
# Includes requred async by Embassy features
esp32-mqtt = ["esp32-wifi", "mqtt"]
esp32s2-mqtt = ["esp32s2-wifi", "mqtt"]
esp32s3-mqtt = ["esp32s3-wifi", "mqtt"]
esp32c3-mqtt = ["esp32c3-wifi", "mqtt"]
esp32c2-mqtt = ["esp32c2-wifi", "mqtt"]
esp32c6-mqtt = ["esp32c6-wifi", "mqtt"]

alloc = ["esp-alloc"]
async = ["embassy-executor"]

mqtt = [
    "async",
    "wifi",
    "esp-hal/embassy",
    "esp-hal/async",
    "esp-hal/embassy-executor-thread",
    "esp-wifi/embassy-net",
    "esp-wifi/async",
    "esp-wifi/embedded-svc",
    "esp-hal/embassy-time-timg0",
    "rust-mqtt",
    "embassy-net",
    "static_cell",
    "embassy-net-driver",
]

# marker feature
wifi = ["smoltcp", "heapless"]
# flag feature to make docs buildable on GH
docs = []

# If you're using any Wi-Fi features, provide these features
esp32-wifi = ["esp32", "esp-wifi/esp32", "wifi"]
esp32s2-wifi = ["esp32s2", "esp-wifi/esp32s2", "wifi"]
esp32s3-wifi = ["esp32s3", "esp-wifi/esp32s3", "wifi"]
esp32c2-wifi = ["esp32c2", "esp-wifi/esp32c2", "wifi"]
esp32c3-wifi = ["esp32c3", "esp-wifi/esp32c3", "wifi"]
esp32c6-wifi = ["esp32c6", "esp-wifi/esp32c6", "wifi"]

# Chip-specific features
esp32 = [
    "esp-backtrace/esp32",
    "esp-println/esp32",
    "esp-hal/esp32",
    "esp-max7219-nostd/esp32",
]
esp32s2 = [
    "esp-backtrace/esp32s2",
    "esp-println/esp32s2",
    "esp-hal/esp32s2",
    "esp-max7219-nostd/esp32s2",
]
esp32s3 = [
    "esp-backtrace/esp32s3",
    "esp-println/esp32s3",
    "esp-hal/esp32s3",
    "esp-max7219-nostd/esp32s3",
]
esp32c3 = [
    "esp-backtrace/esp32c3",
    "esp-println/esp32c3",
    "esp-hal/esp32c3",
    "esp-max7219-nostd/esp32c3",
]
esp32c2 = [
    "esp-backtrace/esp32c2",
    "esp-println/esp32c2",
    "esp-hal/esp32c2",
    "esp-max7219-nostd/esp32c2",
]
esp32c6 = [
    "esp-backtrace/esp32c6",
    "esp-println/esp32c6",
    "esp-hal/esp32c6",
    "esp-max7219-nostd/esp32c6",
]
esp32h2 = [
    "esp-backtrace/esp32h2",
    "esp-println/esp32h2",
    "esp-hal/esp32h2",
    "esp-max7219-nostd/esp32h2",
]
